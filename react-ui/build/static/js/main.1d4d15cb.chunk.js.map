{"version":3,"sources":["actions/login.js","helper-functions/index.js","login/Login.js","images/Images.js","actions/weather.js","actions/news.js","actions/clothes.js","news/News.js","tasks/Tasks.js","actions/tasks.js","login/Register.js","dashboard/ThumbnailContainer.js","dashboard/Dashboard.js","Routing.js","App.js","serviceWorker.js","reducers/index.js","reducers/photos.js","actions/photos.js","reducers/login.js","reducers/weather.js","reducers/clothes.js","reducers/news.js","reducers/tasks.js","index.js"],"names":["setLoggedIn","loggedIn","type","setToken","token","setUserCredentials","userName","linkTo","address","props","history","push","Login","login","data","state","email","password","dispatch","a","async","fetch","method","headers","body","JSON","stringify","response","json","user","name","console","error","onChange","e","setState","target","value","className","this","placeholder","onClick","Component","withRouter","connect","Images","handleFileUpload","imageFile","files","reader","FileReader","onloadend","image","Image","src","result","onload","ev","canvas","document","getElementById","width","height","ctx","getContext","clearRect","drawImage","readAsDataURL","loadingData","id","ref","accept","setWeather","weather","setNews","news","organiseClothes","clothesArray","clothes","forEach","day","undefined","clothe","d","News","title","description","Tasks","task","addTask","removeTask","taskId","tasks","key","log","Register","register","username","ThumbnailContainer","header","Dashboard","weatherBody","weatherIconUrl","temperature","weatherIdCode","Math","round","newsBody","tasksBody","i","length","sportsBody","clothesBody","dataArray","prop","Object","prototype","hasOwnProperty","call","dataKey","cx","cy","innerRadius","outerRadius","fill","Promise","weatherResponse","main","temp","text","responseText","parser","DOMParser","xmlDoc","parseFromString","firstNewsItem","getElementsByTagName","firstImageURl","imageUrl","textContent","responseJson","payload","all","Routing","location","exact","path","component","Boolean","window","hostname","match","appReducer","combineReducers","photos","action","assign","newTasks","rootReducer","middleware","thunk","persistConfig","storage","persistedReducer","persistReducer","reducer","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","loading","App"],"mappings":"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","file":"static/js/main.1d4d15cb.chunk.js","sourcesContent":["export const SET_LOGGED_IN = 'SET_LOGGED_IN';\nexport function setLoggedIn(loggedIn) {\n  return {\n    type : SET_LOGGED_IN,\n    loggedIn\n  }\n}\n\nexport const LOGOUT = 'LOGOUT';\nexport function logout() {\n  return {\n    type : LOGOUT\n  }\n}\n\nexport const SET_TOKEN = 'SET_TOKEN';\nexport function setToken(token) {\n  return {\n    type : SET_TOKEN,\n    token\n  }\n}\n\n\nexport const SET_USER_CREDENTIALS = 'SET_USER_CREDENTIALS';\nexport function setUserCredentials(userName) {\n  return {\n    type : SET_USER_CREDENTIALS,\n    userName\n  }\n}\n\n\nexport function authenticateUser(data) {\n  \n    return async function(dispatch) {\n\n        try {\n            const response = await fetch('/api/users/authenticate', {\n                method : 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                  },\n                  body : JSON.stringify(data)\n            });\n            \n            //LOG response\n            let {token, user} = await response.json()\n            \n            await dispatch(setToken(token))\n            await dispatch(setUserCredentials(user.name))\n            await dispatch(setLoggedIn(true))\n\n        }\n\n        catch (e) {\n            console.error(e)\n        }\n\n        \n  }\n\n}\n\nexport function registerUser(data) {\n  \n    return async function(dispatch) {\n        \n        try {\n            const response = await fetch('/api/users/register', {\n                method : 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\n                  },\n                  body : JSON.stringify(data)\n            });\n            \n            console.log(response)\n            //LOG response\n            let {token, user} = await response.json()\n            \n            \n            await dispatch(setToken(token))\n            await dispatch(setUserCredentials(user.name))\n            await dispatch(setLoggedIn(true))\n\n        }\n\n        catch (e) {\n            console.error(e)\n        }\n\n        \n  }\n    \n\n\n\n    return async function(dispatch) {\n      return fetch('/api/users/register')\n        .then((response) => {\n          return response.json();\n        })\n        .then((json) => {\n          console.log(json);\n        });\n    }\n  \n  }\n","export function linkTo(address, props) {\n    props.history.push('/' + address)\n}\n\n\n/*\n\nexport function parseBBCFeed() {\n  let x = new XMLHttpRequest();\n  x.open(\"GET\", \"http://feeds.bbci.co.uk/news/rss.xml\", true);\n\n  console.log(xmlDoc)\n  }\n\nexport function getLocation() {\n      \n      var options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      };\n      \n      function success(pos) {\n        console.log(pos.coords)\n        toReturn = pos.coords\n      }\n      \n      function error(err) {\n        //provide London coords\n        //lat 35 lon 139\n        toReturn = {latitude : 35, longitude : 139}\n      }\n\n      //\n      return navigator.geolocation.getCurrentPosition(success, error, options)\n      \n}\n*/\n","import React, {Component} from 'react'\nimport {connect} from \"react-redux\"\nimport {getPhotos} from '../actions/photos'\n\nimport {withRouter} from \"react-router-dom\"\nimport {authenticateUser} from \"../actions/login\"\nimport {linkTo} from \"../helper-functions\"\nimport './login.css'\n\nclass Login extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n          email : '',\n          password : ''\n      }\n    }\n\n    login = () => {\n        let {email, password} = this.state;\n        let {dispatch} = this.props\n        \n        if (email !== '' && password !== '') {\n            dispatch(authenticateUser({\n                password,\n                email\n            }))\n        }\n\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n    }\n\n    render() {\n        return <div className = 'login-container'>\n            <input value = {this.state.email} placeholder= \"Email\" name = 'email' onChange = {this.onChange}  />\n            <input value = {this.state.password} type=\"password\" placeholder= \"password\" name = 'password' onChange = {this.onChange}  />\n            <button onClick = {() => this.login()}>Login</button>\n            <div className = 'on-hover' onClick = {() => {linkTo('register', this.props)}}>Register</div>\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        \n    }\n    \n}\n      \nexport default withRouter(connect(mapStateToProps)(Login))  ","import React, {Component} from 'react'\nimport {connect} from \"react-redux\"\nimport {withRouter} from \"react-router-dom\"\nimport './images.css'\n\nclass Images extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n          loadingData : true\n      }\n    }\n\n    \n    \n    handleFileUpload = (e) => {\n    \n           let imageFile = e.target.files[0];\n           var reader  = new FileReader();\n       \n           //This is to be called when dataurl of file upload has been read\n           //TODO look into array buffers to downscale image size \n\n           reader.onloadend = function (e) {\n             var image = new Image();\n             image.src = e.target.result;\n             image.onload = function(ev) {\n               \n               //document.getElementById(\"images\").appendChild(image)\n               let canvas = document.getElementById('canvas')\n               image.width = canvas.width\n               image.height = canvas.height\n               let ctx = canvas.getContext('2d')\n               \n\n               //clear previous image\n               ctx.clearRect(0, 0, canvas.width, canvas.height);\n               //image, offset, offset, dimension, dimension\n               ctx.drawImage(image, 0, 0, image.width, image.height)\n               \n             }\n           }\n\n           //\n           reader.readAsDataURL(imageFile)\n       \n         \n    }\n\n    \n\n    render() {\n        return <div id ='images-container'>\n            <canvas id = 'canvas' ref=\"canvas\" width={280} height={280} />\n            <input type = 'file' onChange = {(e) => this.handleFileUpload(e)}  accept=\"image/x-png,image/gif,image/jpeg\" />\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        \n    }\n    \n}\n      \nexport default withRouter(connect(mapStateToProps)(Images))  ","export const SET_WEATHER = 'SET_WEATHER';\nexport function setWeather(weather) {\n  return {\n    type : SET_WEATHER,\n    weather\n  }\n}\n\n\n\n\nexport function getWeather() {\n  \n    return async function(dispatch) {\n\n\n        try {\n\n            //get key, TODO place in config (or likely just forget)\n            let key = 'd0a10211ea3d36b0a6423a104782130e'\n\n            const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=London&appid=${key}`, {\n                \"method\": \"GET\"\n            })\n            \n            //LOG response\n            let weatherResponse = await response.json()\n            \n            let weather = {\n                //convert kelvin to celcius\n                temperature : weatherResponse.main.temp - 273.15,\n                //rainy, sunny or cloudy\n                weatherIdCode : weatherResponse.weather[0].id\n            }\n\n            dispatch(setWeather(weather))\n\n        }\n\n        catch (e) {\n            console.error(e)\n        }\n\n        \n  }\n\n}","export const SET_NEWS = 'SET_NEWS';\nexport function setNews(news) {\n  return {\n    type : SET_NEWS,\n    news\n  }\n}\n\nexport function getNews() {\n\n    //Get first news, get image and title. Use description as body.\n  \n    return async function (dispatch) {\n      \n      try {  \n\n        //fetch xml from bbc rss feed\n        const response = await fetch('https://cors-anywhere.herokuapp.com/http://feeds.bbci.co.uk/news/rss.xml')\n        \n        //convert into text\n        let responseText = await response.text()\n        let parser = new DOMParser()\n\n        //parse string into xml doc // I hope the last two steps weren't redundant\n        let xmlDoc = parser.parseFromString(responseText, 'text/xml')\n        \n        //get first news article, stored as items in bbc feed\n        let firstNewsItem = xmlDoc.getElementsByTagName('item')[0]\n\n        //get first image url from xml also (items don't contain references to their own image)\n        let firstImageURl = xmlDoc.getElementsByTagName('image')[0]\n\n        //retreive string values for imageUrl, text, description\n        let imageUrl = firstImageURl.getElementsByTagName('url')[0].textContent\n        let title = firstNewsItem.getElementsByTagName('title')[0].textContent\n        let description = firstNewsItem.getElementsByTagName('description')[0].textContent\n    \n        let news = {\n            imageUrl,\n            title,\n            description\n        }\n\n        dispatch(setNews(news))\n\n    }\n    catch (e) {\n        console.error(e)\n    }\n  }\n}","export const SET_CLOTHES_SUMMARY = 'SET_CLOTHES_SUMMARY';\nexport function setClothesSummary(clothes) {\n  return {\n    type : SET_CLOTHES_SUMMARY,\n    clothes\n  }\n}\n\nexport function getClothes() {\n\n    //Get first news, get image and title. Use description as body.\n  \n    return async function (dispatch) {\n      \n      try {  \n\n        //fetch xml from bbc rss feed\n        const response = await fetch('https://cors-anywhere.herokuapp.com/https://therapy-box.co.uk/hackathon/clothing-api.php?username=swapnil')\n        \n        //convert into text\n        let responseJson = await response.json()\n        \n        dispatch(setClothesSummary(organiseClothes(responseJson.payload)))\n        //dispatch(setNews(news))\n\n    }\n    catch (e) {\n        console.error(e)\n    }\n  }\n}\n\nlet organiseClothes = (clothesArray) => {\n  //{id: \"0102\", date: \"2019-10-20\", clothe: \"jumper\"}\n\n  let clothes = {}\n\n  clothesArray.forEach(day => {\n    \n    if (clothes[day.clothe] === undefined) {\n      clothes[day.clothe] = {d : 1}\n    }\n\n    else {\n      clothes[day.clothe].d++\n    }\n\n  });\n\n  return clothes;\n\n}","import React, {Component} from 'react'\nimport {connect} from \"react-redux\"\nimport {getWeather} from '../actions/weather'\nimport {getNews} from '../actions/news'\nimport {getClothes} from '../actions/clothes'\nimport {withRouter} from \"react-router-dom\"\n\nimport {\n    PieChart, Pie, Legend, Tooltip,\n  } from 'recharts';\n\n\nimport './News.css'\nimport {linkTo} from \"../helper-functions\"\nimport {parseBBCFeed} from \"../helper-functions\"\n\nclass News extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n          loadingData : true\n      }\n    }\n    \n   \n\n  \n\n    render() {\n        let { title,\n            description} = this.props.news.news\n        return (<div id = 'news-container'>\n                <h3 className = 'absolute-top-left'>News</h3>\n                <div id = 'news-container-image' />\n                <h3 className = 'big'>{title}</h3>\n                <div>{description}</div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const { news } = state\n \n\n    return {\n       news\n    }\n    \n}\n      \nexport default withRouter(connect(mapStateToProps)(News))  ","import React, {Component} from 'react'\nimport {connect} from \"react-redux\"\nimport {addTask, removeTask} from '../actions/tasks'\nimport {withRouter} from \"react-router-dom\"\n\n\n\nimport './Tasks.css'\n\n\nclass Tasks extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n          loadingData : true,\n          task : ''\n      }\n    }\n    \n    onChange = (e) => {\n        this.setState({task : e.target.value})\n    }\n\n    addTask = () => {\n        let {dispatch} = this.props;\n        if (this.state.task !== '') {\n            dispatch(addTask(this.state.task))\n            this.setState({task : ''})\n        }\n\n    }\n\n    removeTask = (id) => {\n        let {dispatch} = this.props;\n        dispatch(removeTask(id))\n    }\n\n    render() {\n        let tasks = this.props.tasks.tasks\n\n        let body = []\n        tasks.forEach((task, id) => {\n            body.push(\n                <div key = {id} onClick = {() => {this.removeTask(id)} }>{task}</div>\n            )\n        });\n\n        console.log(body)\n\n        return (<div id = 'tasks-container'>\n            <h3 className = 'absolute-top-left'>Tasks</h3>\n                {body}\n                <input value = {this.state.task} onChange = {(e) => this.onChange(e)} />\n                <button onClick = {() => this.addTask()}>Add Task</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const { tasks } = state\n \n    return {\n       tasks\n    }\n    \n}\n      \nexport default withRouter(connect(mapStateToProps)(Tasks))  ","export const ADD_TASK = 'ADD_TASK';\nexport function addTask(task) {\n  return {\n    type : ADD_TASK,\n    task\n  }\n}\n\nexport const REMOVE_TASK = 'REMOVE_TASK';\nexport function removeTask(taskId) {\n  return {\n    type : REMOVE_TASK,\n    taskId\n  }\n}\n\n/*\nexport function addTask(task) {\n  \n  return function(dispatch) {\n    dispatch(addTask(task))\n  } \n\n}\n*/","import React, {Component} from 'react'\nimport {connect} from \"react-redux\"\nimport {registerUser} from \"../actions/login\"\nimport {withRouter} from \"react-router-dom\"\nimport {linkTo} from \"../helper-functions\"\nimport './login.css'\n\nclass Register extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n          username : '',\n          email : '',\n          password : ''\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name] : e.target.value})\n    }\n\n    register = () => {\n        let {email, password, username} = this.state;\n        let {dispatch} = this.props\n        \n        if (email !== '' && password !== '' && username !== '') {\n            dispatch(registerUser({\n                password,\n                email, \n                name : username\n            }))\n        }\n    }\n\n    render() {\n        return <div className = 'login-container'>\n            <input value = {this.state.username} placeholder= \"Username\" name = 'username' onChange = {this.onChange}   />\n            <input value = {this.state.email} placeholder= \"Email\" name = 'email' onChange = {this.onChange}   />\n            <input value = {this.state.password} type=\"password\" placeholder= \"Password\" name = 'password' onChange = {this.onChange}   />\n            <button onClick = {() => {this.register()}}>Register</button>\n            <div className = 'on-hover' onClick = {() => {linkTo('login', this.props)}}>Login</div>\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        \n    }\n    \n}\n      \nexport default withRouter(connect(mapStateToProps)(Register))  ","import React, {Component} from 'react'\nimport {connect} from \"react-redux\"\nimport {withRouter} from \"react-router-dom\"\nimport './ThumbnailContainer.css'\n\nexport class ThumbnailContainer extends Component {\n\n    render() {\n        return (\n            <div id = 'thumbnail-container' onClick = {() => this.props.linkTo()}>\n                <div id = 'thumbnail-container-header'>\n                    <h3>{this.props.header}</h3>\n                </div>\n                <div id = 'thumbnail-container-body'>\n                    {this.props.body}\n                </div>\n            </div>\n        )\n    }\n}\n\n\n      ","import React, {Component} from 'react'\nimport {connect} from \"react-redux\"\nimport {getWeather} from '../actions/weather'\nimport {getNews} from '../actions/news'\nimport {getClothes} from '../actions/clothes'\nimport {withRouter} from \"react-router-dom\"\nimport {ThumbnailContainer} from \"./ThumbnailContainer\"\nimport {\n    PieChart, Pie, Legend, Tooltip,\n  } from 'recharts';\n\n\nimport './Dashboard.css'\nimport {linkTo} from \"../helper-functions\"\nimport {parseBBCFeed} from \"../helper-functions\"\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n          loadingData : true\n      }\n    }\n\n    async componentDidMount() {\n\n        let {dispatch} = this.props\n\n        await Promise.all([\n            await dispatch(getWeather()),\n            await dispatch(getNews()),\n            await dispatch(getClothes())\n        ])\n        \n\n        \n        \n\n        this.setState({loadingData : false})\n    }\n\n\n    weatherBody = () => {\n        /*\n        temperature: 10.240000000000009\n        weatherIdCode: 500\n        */\n\n        let {temperature, weatherIdCode} = this.props.weather.weather\n\n        let weatherIconUrl;\n\n        //Get weather icon\n        switch(weatherIdCode) {\n            case weatherIdCode === 800:\n                weatherIconUrl = 'Sun_icon.png'\n              break;\n            case weatherIdCode > 499 && weatherIdCode < 532:\n                weatherIconUrl = 'Rain_icon.png'\n              break;\n            default:\n                weatherIconUrl = 'Clouds_icon.png'\n          }\n        \n        weatherIconUrl  = './assets/' + weatherIconUrl\n        \n        return (\n            <div>\n                <div className = 'cloud'  />\n                <div id ='temperature'>\n                    <div>\n                        {Math.round(temperature)}\n                    </div>\n                    <div>degrees</div>\n                </div>\n                <div id = 'weather-location'> London </div>\n            </div>    \n        )  \n\n    }\n    \n    newsBody = () => {\n       let { title,\n        description} = this.props.news.news\n        console.log('title' + title)\n        console.log('desc' + description)\n        return (\n            <div className = 'listed'>\n                <h3>{title}</h3>\n                <div>{description}</div>\n            </div>    \n        )\n    }\n\n    tasksBody = () => {\n        let tasks = this.props.tasks.tasks\n\n        let body = []\n\n        for (let i = 0; i < tasks.length && i < 3; i++) {\n            body.push(\n                <div>\n                    {tasks[i]}\n                </div>)\n        }\n\n        return (\n            <div className = 'listed'>\n                {body}\n            </div> )\n\n    }\n\n    sportsBody = () => {\n        return (\n            <div className = 'listed'>\n                <h3>Woo Sports</h3>\n                <div>Woo sports descriptions</div>\n            </div>    \n        )\n    }\n\n    clothesBody = () => {\n        let {clothes} = this.props.clothes\n       \n\n        let dataArray = []\n\n\n        for (let prop in clothes) {\n            if (Object.prototype.hasOwnProperty.call(clothes, prop)) {\n                \n                dataArray.push({\n                    name : prop,\n                    value : clothes[prop].d\n                })\n            }\n        }\n\n        return (\n            <PieChart width={300} height={300}>\n                <Pie dataKey=\"value\" data={dataArray} cx={145} cy={90} innerRadius={40} outerRadius={80} fill=\"#82ca9d\" />\n                <Tooltip />\n            </PieChart>\n        )\n\n    }\n\n    render() {\n        return <div id = 'dashboard-container'>\n            \n            <h1>Good day, {this.props.userName}</h1>\n\n\n            {this.state.loadingData ? (\n                <div>Loading data</div>\n            ) : (\n            <div id = 'dashboard-thumbnail-container'>\n                \n                <div className = 'flex-row'>\n                    <ThumbnailContainer \n                        header = 'weather'\n                        body = {this.weatherBody()}\n                        linkTo = {() => console.log('news')}\n                    />\n                    \n                    <ThumbnailContainer \n                        header = 'news'\n                        body = {this.newsBody()}\n                        linkTo = {() => linkTo('news', this.props)}\n                    />\n                   \n                    <ThumbnailContainer \n                        header = 'sport'\n                        body = {this.sportsBody()}\n                        linkTo = {() => console.log('news')}\n                    />\n                </div >\n                <div className = 'flex-row'>\n                    <ThumbnailContainer \n                        header = 'photos'\n                        linkTo = {() => linkTo('images', this.props)}\n                    />\n\n                    <ThumbnailContainer \n                        header = 'tasks'\n                        body = {this.tasksBody()}\n                        linkTo = {() => linkTo('tasks', this.props)}\n                    />\n\n                    <ThumbnailContainer \n                        header = 'clothes'\n                        body = {this.clothesBody()}\n                        linkTo = {() => console.log('news')}\n                    />\n                </div>\n            </div>\n            )}\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    const {login, weather, news, clothes,tasks} = state\n    const {userName} = login\n\n    return {\n        userName, weather, news, clothes, tasks\n    }\n    \n}\n      \nexport default withRouter(connect(mapStateToProps)(Dashboard))  ","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {Switch, Route, withRouter} from 'react-router-dom';\n\nimport Login from './login/Login';\nimport Images from './images/Images';\nimport News from './news/News';\nimport Tasks from './tasks/Tasks';\n\nimport Register from './login/Register';\nimport Dashboard from './dashboard/Dashboard';\n\nclass Routing extends Component {\n  \n  render () {\n    \n    //if user is logged in, allow unrestricted access\n    const {location} = this.props;\n\n    //CertificateDisplay\n    return (\n      <main>\n          {this.props.loggedIn ? (\n            <Switch location = {location} >\n              <Route exact path = '/images' component = {Images} />\n              <Route exact path = '/news' component = {News} />\n              <Route exact path = '/tasks' component = {Tasks} />\n              <Route exact path = '/*' component = {Dashboard} />\n            </Switch>\n          ) : (\n            <Switch location = {location} >\n              <Route exact path = '/register' component = {Register} />\n              <Route exact path = '/*' component = {Login} />\n            </Switch>\n          )\n          }\n      </main>\n    );\n\n  }\n\n}\n\nconst mapStateToProps = state => {\n\n  const {login} = state;\n  const {loggedIn} = login;\n  \n  return {\n    loggedIn\n  }\n  \n};\n\nexport default withRouter(connect(mapStateToProps)(Routing));\n  ","import React from 'react'\nimport Routing from './Routing'\nimport './App.css'\n\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport {logout} from './actions/login'\n\nfunction App(props) {\n  let {dispatch} = props\n  //<div id = 'absolute-top-right'>Logout</div>\n  return (\n    <div className=\"App\">\n      {props.loggedIn &&\n        <div id = 'absolute-top-right' onClick = {() => dispatch(logout())}>Logout</div>\n      }\n      <Routing />\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  let {login} = state\n  let {loggedIn} = login\n  return {\n    loggedIn\n  }\n  \n}\nexport default withRouter(connect(mapStateToProps)(App)) \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport photos from './photos';\nimport login from './login';\nimport weather from './weather';\nimport news from './news';\nimport clothes from './clothes';\nimport tasks from './tasks';\n\nconst appReducer = combineReducers({\n    photos,\n    login,\n    weather,\n    clothes,\n    news, \n    tasks\n});\n  \nconst rootReducer = (state, action) => {\n    if (action.type === 'LOGOUT') {\n        state = undefined\n    }\n    return appReducer(state, action)\n}\n  \nexport default rootReducer;\n\n","import {SET_PHOTOS} from '../actions/photos';\n\n\nexport default function photos (\n\n    state = {\n        \n        photos : []\n\n    }, action\n\n) {\n    \n    switch (action.type) {\n        \n        case SET_PHOTOS: {\n\n            const {payload} = action;\n        \n            return Object.assign({}, state, {\n                photos : payload\n            }); \n        }\n\n        default: {\n  \n          return state\n  \n        }  \n  \n    }\n\n}","export const SET_PHOTOS = 'SET_PHOTOS';\nexport function setPhotos(payload) {\n  return {\n    type : SET_PHOTOS,\n    payload\n  }\n}\n\nexport function getPhotos() {\n  \n  return function() {\n    return fetch('/api/photos/')\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        console.log(json);\n      });\n  }  \n}\n","import {SET_LOGGED_IN, SET_USER_CREDENTIALS} from '../actions/login';\nimport {SET_TOKEN} from '../actions/login';\n\nexport default function login (\n\n    state = {\n        \n        loggedIn : false,\n        userName : '',\n        token : null\n\n    }, action\n\n) {\n\n    switch (action.type) {\n        \n        case SET_LOGGED_IN: {\n            const {loggedIn} = action\n        \n            return Object.assign({}, state, {\n                loggedIn\n            }); \n            \n        }\n\n        case SET_TOKEN: {\n            const {token} = action\n\n            return Object.assign({}, state, {\n                token\n            }); \n\n        }\n\n        case SET_USER_CREDENTIALS: {\n            const {userName} = action\n\n            return Object.assign({}, state, {\n                userName\n            }); \n        }\n\n        default: {\n  \n            return state\n  \n        }  \n  \n    }\n\n}","import {SET_WEATHER} from '../actions/weather';\n\nexport default function weather (\n\n    state = {\n        \n        weather : null\n\n    }, action\n\n) {\n\n    switch (action.type) {\n        \n        case SET_WEATHER: {\n\n            const {weather} = action;\n        \n            return Object.assign({}, state, {\n                weather\n            }); \n        }\n\n        default: {\n  \n          return state\n  \n        }  \n  \n    }\n\n}","import {SET_CLOTHES_SUMMARY} from '../actions/clothes';\n\n\nexport default function clothes (\n\n    state = {\n        \n        clothes : {}\n\n    }, action\n\n) {\n    \n    switch (action.type) {\n        \n        case SET_CLOTHES_SUMMARY: {\n\n            const {clothes} = action;\n        \n            return Object.assign({}, state, {\n                clothes\n            })\n        }\n\n        default: {\n  \n          return state\n  \n        }  \n  \n    }\n\n}","import {SET_NEWS} from '../actions/news';\n\nexport default function news (\n\n    state = {\n        \n        news : null\n\n    }, action\n\n) {\n\n    switch (action.type) {\n        \n        case SET_NEWS: {\n\n            const {news} = action;\n        \n            return Object.assign({}, state, {\n                news\n            }); \n        }\n\n        default: {\n  \n          return state\n  \n        }  \n  \n    }\n\n}","import {ADD_TASK, REMOVE_TASK} from '../actions/tasks';\n\n\nexport default function tasks (\n\n    state = {\n        \n        tasks : ['task description', 'task description',\n        'task description']\n\n    }, action\n\n) {\n    \n    switch (action.type) {\n        \n        case ADD_TASK: {\n\n            const {task} = action;\n            let tasks = [...state.tasks]\n            tasks.push(task)\n            return Object.assign({}, state, {\n                tasks\n            }); \n        }\n\n        case REMOVE_TASK: {\n\n            const {taskId} = action;\n            let tasks = [...state.tasks]\n            let newTasks = []\n            \n            tasks.forEach((task, id) => {\n                if (taskId !== id) {\n                    newTasks.push(task)\n                }\n            })\n\n            return Object.assign({}, state, {\n                tasks : newTasks\n            }); \n        }\n\n        default: {\n  \n          return state\n  \n        }  \n  \n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\n\n\nimport {BrowserRouter, Route} from 'react-router-dom';\n\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\n\nimport reducer from './reducers';\n\nlet middleware = [];\n\nmiddleware.push(thunk);\n\nif (process.env.NODE_ENV !== 'production') {\n  //import { createLogger } from 'redux-logger';\n  //middleware.push(createLogger());\n}\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n  }\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\nlet store = createStore(\n    persistedReducer,\n    applyMiddleware(...middleware)\n  )\n\nlet persistor = persistStore(store)\n\nReactDOM.render(\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <Route component={App} />\n        </BrowserRouter> \n      </PersistGate>\n    </ Provider>,\n    document.getElementById('root')\n  )\n\n  /** \n   * \n   * \n  */"],"sourceRoot":""}